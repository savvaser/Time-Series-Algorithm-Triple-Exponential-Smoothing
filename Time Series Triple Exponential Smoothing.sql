SET SCHEMA PAL;

-- Creating the Input, Parameter, and Results table types.

CREATE TYPE PAL_T_TS_DATA AS TABLE (CALENDAR_ID INT, SALES_AMOUNT DOUBLE);
CREATE TYPE PAL_T_TS_PARAMS AS TABLE (NAME VARCHAR(60), INTARGS INTEGER, DOUBLEARGS DOUBLE, STRINGARGS VARCHAR (100));
CREATE TYPE PAL_T_TS_RESULTS AS TABLE (CALENDAR_ID INT, SALES_AMOUNT DOUBLE);

--Creating the Signature table

CREATE COLUMN TABLE PAL_TS_SIGNATURE (ID INTEGER, TYPENAME VARCHAR(100), DIRECTION VARCHAR(100));
INSERT INTO PAL_TS_SIGNATURE VALUES (1, 'PAL.PAL_T_TS_DATA', 'in');
INSERT INTO PAL_TS_SIGNATURE VALUES (2, 'PAL.PAL_T_TS_PARAMS', 'in');
INSERT INTO PAL_TS_SIGNATURE VALUES (3, 'PAL.PAL_T_TS_RESULTS', 'out');

--Creating a procedure by calling the "TRIPLESMOOTH" function

CALL SYSTEM.AFL_WRAPPER_GENERATOR ('PAL_TS_T', 'AFLPAL', 'TRIPLESMOOTH', PAL_TS_SIGNATURE);

-- Creating a view as we only need a few columns for analysis

CREATE VIEW V_TS_DATA AS 
	SELECT CALENDAR_ID, SUM(SALES_AMOUNT) AS SALES_AMOUNT 
		FROM ORDER_FACTS
		WHERE ITEM_ID BETWEEN 30 AND 39
		GROUP BY CALENDAR_ID 
		ORDER BY CALENDAR_ID;
    
--Creating the parameter and results table that would be passed as parameters when calling the procedure that was created

CREATE COLUMN TABLE TS_PARAMS LIKE PAL_T_TS_PARAMS;
CREATE COLUMN TABLE TS_RESULTS LIKE PAL_T_TS_RESULTS;
CREATE VIEW V_TS_RESULTS AS
	SELECT 
		CASE WHEN a.CALENDAR_ID IS NOT NULL THEN a.CALENDAR_ID ELSE b.CALENDAR_ID END AS CALENDAR_ID, 
		a.SALES_AMOUNT, 
		ROUND(b.SALES_AMOUNT) AS SALES_AMOUNT_PREDICTED 
	 FROM V_TS_DATA a 
	 FULL JOIN TS_RESULTS b ON (a.CALENDAR_ID=b.CALENDAR_ID);

INSERT INTO TS_PARAMS VALUES ('RAW_DATA_COL' ,1, null, null);
INSERT INTO TS_PARAMS VALUES ('ALPHA', null, 0.1, null);
INSERT INTO TS_PARAMS VALUES ('BETA', null, 0.1, null);
INSERT INTO TS_PARAMS VALUES ('GAMMA', null, 0.1, null);
INSERT INTO TS_PARAMS VALUES ('CYCLE', 4, null, null);
INSERT INTO TS_PARAMS VALUES ('FORECAST_NUM', 1, null, null);
INSERT INTO TS_PARAMS VALUES ('STARTTIME', 0, null, null);

--Updating the parameter values

UPDATE TS_PARAMS SET DOUBLEARGS=0.1 WHERE NAME='ALPHA';
UPDATE TS_PARAMS SET DOUBLEARGS=0.5 WHERE NAME='BETA';
UPDATE TS_PARAMS SET DOUBLEARGS=0.4 WHERE NAME='GAMMA';
UPDATE TS_PARAMS SET INTARGS=4 WHERE NAME='CYCLE';
UPDATE TS_PARAMS SET INTARGS=12 WHERE NAME='FORECAST_NUM';
UPDATE TS_PARAMS SET INTARGS=0 WHERE NAME='STARTTIME';

TRUNCATE TABLE TS_RESULTS;

--Executing the procedure

CALL _SYS_AFL.PAL_TS_T (V_TS_DATA, TS_PARAMS, TS_RESULTS) WITH OVERVIEW;

--Finally checking the reults of Triple Exponential Smoothing

SELECT * FROM "RESULTS";
SELECT * FROM "V_RESULTS";
